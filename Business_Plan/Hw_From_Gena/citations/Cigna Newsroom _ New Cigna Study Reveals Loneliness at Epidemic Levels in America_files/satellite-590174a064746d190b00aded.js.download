_satellite.pushAsyncScript(function(event, target, $variables){
  _sdi = window._sdi = window._sdi || {};
_sdi.util = _sdi.util || {};
_satellite.notify('utils loaded');
_sdi.util.getValueOfObjectProperty = function(obj, path) {
    // If we have reached an undefined/null property
    // then stop executing and return undefined.
    if (obj === undefined || obj === null) {
        return;
    }
    // split path string to array
    var properties = path.split('.');
    // If the path array has no more elements, we've reached
    // the intended property and return its value.
    if (properties[0].length === 0) {
        return obj;
    }
    // Prepare our found property and path array for recursion
    var foundSoFar = obj[properties[0]];
    var remainingProperties = properties.slice(1).join('.');
    return this.getValueOfObjectProperty(foundSoFar, remainingProperties);
};
_sdi.util.addSVariable = function(name,value){
  try {
    s[name] = value;
    s.linkTrackVars=s.apl(s.linkTrackVars,name,',',1);
  } catch(e) {
    _satellite.notify("Error in adding S Variable");
  }
};
_sdi.util.addEvar = function(name,value){
  if ( typeof name != "undefined" && typeof value != "undefined" ) {
    _sdi.util.addSVariable(name,value);
  } else {
    _satellite.notify("Attempt to add evar without name or value");
  }
};
_sdi.util.addProp = function(name,value){
  if ( typeof name != "undefined" && typeof value != "undefined" ) {
    _sdi.util.addSVariable(name,value);
  } else {
    _satellite.notify("Attempt to add prop without name or value");
  }
};
_sdi.util.addEvent = function(name,value){
  if ( typeof name != "undefined" ) {
    var evt = name;
    if ( typeof value != "undefined" ) { // when value is present create event string
      evt += "=" + value;
      s.events=s.apl(s.events,evt,',',1);
    } else {
      s.events=s.apl(s.events,evt,',',1);
    }
  } else {
    _satellite.notify("Attempt to add event without name");
  }
};
});
